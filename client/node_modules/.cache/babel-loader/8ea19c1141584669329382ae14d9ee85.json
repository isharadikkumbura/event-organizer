{"ast":null,"code":"import { GET_ALL_EVENTS, EVENT_ERROR } from './types';\nimport { GET_EVENTS } from '../graphql/query';\nimport { useClient } from '../graphql/client'; // Get All Evnts\n\nexport const getAllEvents = () => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    try {\n      const res = await useClient().request(GET_EVENTS);\n      console.log(res);\n      dispatch({\n        type: GET_ALL_EVENTS,\n        payload: res.events\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: EVENT_ERROR,\n        payload: {\n          msg: err.response.error,\n          status: err.response.status\n        }\n      });\n    }\n  }, \"5Ecbo99Oq33Mu6ql/zUSLOAdddg=\", false, function () {\n    return [useClient];\n  });\n};","map":{"version":3,"sources":["/Users/isharadikkumburage/Development/event-organizer/client/src/actions/event.js"],"names":["GET_ALL_EVENTS","EVENT_ERROR","GET_EVENTS","useClient","getAllEvents","dispatch","res","request","console","log","type","payload","events","err","msg","response","error","status"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,SAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAAA;;AAAA,YAAM,MAAOC,QAAP,IAAoB;AAAA;;AACpD,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMH,SAAS,GAAGI,OAAZ,CAAoBL,UAApB,CAAlB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEV,cADC;AAEPW,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAR,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAET,WADC;AAEPU,QAAAA,OAAO,EAAE;AAAEG,UAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,KAApB;AAA2BC,UAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAAhD;AAFF,OAAD,CAAR;AAID;AACF,GAf2B;AAAA,YAENd,SAFM;AAAA;AAAA,CAArB","sourcesContent":["import { GET_ALL_EVENTS, EVENT_ERROR } from './types';\nimport { GET_EVENTS } from '../graphql/query';\nimport { useClient } from '../graphql/client';\n\n// Get All Evnts\nexport const getAllEvents = () => async (dispatch) => {\n  try {\n    const res = await useClient().request(GET_EVENTS);\n    console.log(res);\n    dispatch({\n      type: GET_ALL_EVENTS,\n      payload: res.events,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: EVENT_ERROR,\n      payload: { msg: err.response.error, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}